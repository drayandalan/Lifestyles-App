server.port=${SERVER_PORT:8085}

# Database configs
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/lifestyles_app?allowPublicKeyRetrieval=true&autoReconnect=true&useSSL=false&serverTimezone=Asia/Jakarta&zeroDateTimeBehavior=convertToNull&useLegacyDatetimeCode=false
spring.datasource.username=${MYSQL_USERNAME:username}
spring.datasource.password=${MYSQL_PASSWORD:password}
spring.jpa.show-sql=true
spring.jpa.hibernate.use-new-id-generator-mappings=false
spring.datasource.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57InnoDBDialect
spring.datasource.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.datasource.jpa.hibernate.ddl-auto=validate
spring.datasource.jpa.main.allow-bean-definition-overriding=true

#Kafka configs
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_ADDRESS:localhost:9092}
spring.kafka.consumer.ack-mode=RECORD
spring.kafka.producer.compression-type=gzip
kafka.bootstrapAddress=${KAFKA_BOOTSTRAP_ADDRESS:localhost:9092}
kafka.consumer.group=lifestyles-app-local
kafka.username=${KAFKA_USERNAME:}
kafka.password=${KAFKA_PASSWORD:}
kafka.topic.food.getRandomRecipes-req=food-getRandomRecipes-request
kafka.topic.food.getRandomRecipes-resp=food-getRandomRecipes-response
kafka.topic.food.getNutrientById-req=food-getNutrientById-request
kafka.topic.food.getNutrientById-resp=food-getNutrientById-response
kafka.topic.football.getLeagueStandingsBySeason-req=football-getLeagueStandingsBySeason-request
kafka.topic.football.getLeagueStandingsBySeason-resp=football-getLeagueStandingsBySeason-response

#JWT configs
jwt.secret=mySecretKeySuperman777!
jwt.expirationMs=86400000
